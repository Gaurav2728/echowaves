<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
   "http://www.w3.org/TR/html4/strict.dtd">

<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<title> - <%= h @conversation.name %></title>
  <link rel="shortcut icon" href="/images/favicon.ico" />
 	
  <link rel="stylesheet" href="/stylesheets/screen.css" type="text/css" media="screen, projection">
  <link rel="stylesheet" href="/stylesheets/print.css" type="text/css" media="print"> 
  <!--[if IE]>
    <link rel="stylesheet" href="/stylesheets/ie.css" type="text/css" media="screen, projection">
  <![endif]-->
  <link rel="stylesheet" href="/stylesheets/style.css" type="text/css" media="screen, projection">
 	<%= stylesheet_link_tag 'default' %>
 	<%= stylesheet_link_tag 'chat' %>
 	<%= javascript_include_tag :defaults %>
 	<%= javascript_include_tag "misc" %>
 	<%= javascript_include_tag "windowmanager" %>
 	<%= javascript_include_tag "messagemanipulation" %>
 	<%= javascript_include_tag "keyboard" %>


	<%= stylesheet_link_tag 'unitip' %>
	<%= javascript_include_tag 'unitip' %>
	
	<% if logged_in? %>
	
 	<%= orbited_javascript %> 		
 	<script>
 	function stomp_function() {
 		 var output = $('connection_stat_data');
 		// set up shell.
 		// set up stomp client.
 		stomp = new STOMPClient();
 		stomp.onopen = function() {
 			output.update('<span class="status_yellow"><%= t("ui.transport_opened") %></span>');
 		};
 		stomp.onclose = function(code) {
 			output.update('<span class="status_red"><%= t("ui.transport_closed") %> (<%= t("ui.code") %>: ' + code + ')</span>');
 			//try to reconnect
 			// stomp.connect(document.domain, 61613, 'UNIQUE_ID_PER_CLIENT', '');
			stomp.connect('<%=STOMP_HOST%>', <%=STOMP_PORT%>, '<%=current_user.id%>', '');
			// stomp.subscribe('CONVERSATION_CHANNEL_<%=@conversation.id%>', {exchange:''});
	 		
	 		setTimeout("stomp.subscribe('CONVERSATION_CHANNEL_<%=@conversation.id%>', {exchange:''})",5000);

 		};
 		stomp.onerror = function(error) {
 			alert("onerror: " + error);
 			output.update('<span class="status_red">onerror: ' + error + '</span>');
 		};
 		stomp.onerrorframe = function(frame) {
 			alert("onerrorframe: " + frame.body);
 			output.update('<span class="status_red">onerrorframe: ' + frame.body + '</span>');
 		};
 		stomp.onconnectedframe = function() {
 			output.update('<span class="status_green"><%= t("ui.connected") %></span>');
 		};
 		stomp.onmessageframe = function(frame) {
 			var message_output = $('messages');
			// this is an actual message for current conversation
 			if(frame.headers['destination'].startsWith("CONVERSATION_CHANNEL_") ) {
 				message_output.insert({"bottom":frame.body});
 				MessageManipulation.handle_new_messages();
 				Misc.pageScroll();
 			}	
			// this is a notify conversation message
 			if(frame.headers['destination'].startsWith("CONVERSATION_NOTIFY_CHANNEL_") ) {
			}

 		};
		stomp.connect('<%=STOMP_HOST%>', <%=STOMP_PORT%>, 'user_<%=current_user.id%>', '');
		// stomp.subscribe('CONVERSATION_CHANNEL_<%=@conversation.id%>', {exchange:''});
 		setTimeout("stomp.subscribe('CONVERSATION_CHANNEL_<%=@conversation.id%>', {exchange:''})", 5000);

 	};

  </script>
  <%end#if user is not logged in, no point in connecting to orbited%>
</head>

<body id="messages_layout" onLoad="Misc.focusInput('message_message');Misc.pageScroll();stomp_function();">

	<div id="header_container"><%= render(:partial => "shared/header") %></div>
	

	<div id="main_content" class="container">
    
		<div id="col1" class="span-14">
		  <%= flash_messages %>
  		<%= yield  %>
  		
  		<div id="attachment_form" style="display:none"><div id="attachment_form_padding">
    	  <%#this form is purely for attachments handling%>
    	  <% form_for(:message, 
    	  	:url  => { :action => "upload_attachment" },
    	    :html => { :multipart => true, :target => "upload_frame" } ) do |f| %>
    	      <%= f.file_field :attachment %>
    	  	  <input type="hidden" name="conversation_id" id="conversation_id" value="<%= @conversation.id %>" />
    	  	  <%= submit_tag t("ui.attach") %>
    	  	  <%= link_to_function "hide" do |page|
              page[:attachment_form].hide
              page[:attachment_link].show
            end %>
    	  <% end %>
    	  
    	  <iframe id='upload_frame' name="upload_frame" style="width:0px;height:0px;border:0px" src="about:blank"></iframe>
      </div></div>
      
		  <div class="item" id="messagesform" >
		      			  
			  <div id="messageinputdiv">
		      <% if logged_in? && @conversation.writable_by?(current_user) %>		
            <% remote_form_for(:message,
            	:update => 'messages', :position => 'bottom',
              :url => conversation_messages_path(@conversation),
              :loading => "$('msgform').disable();",
              :complete => "$('msgform').enable();$('message_message').value = '';$('message_attachment').value = '';$('message_message').style.height = '4em';$('message_message').focus();MessageManipulation.handle_new_messages();$('messages').setStyle('padding-bottom: 118px');",
              # don't poll right now, and set the "after" value
              :before => 'MessageManipulation.working_begin();',
              :condition => "$('message_message').value.strip().length > 0",
              :html => {:id => 'msgform'}) do |f| %>
               

              <p id="msgtextarea">        
                <%= f.text_area :message, :onkeyup => "FitToTextAndMoveMessagesUp(this, ($('main_content').getHeight() - 300));Misc.pageScroll();", :class => 'messageinput' %>  
              </p>
                
              <p id="msgcontrols">
                <%= submit_tag t("ui.send") %> <span class="mute"><%= t("ui.ctrl_enter") %></span>
                  
                <span id="working" style="display:none">Working...</span>
                <%= link_to_function t("ui.attach_file"), :id => 'attachment_link' do |page|
                  page[:attachment_form].show
                  page[:attachment_link].hide
                end %>
              </p>
            <% end %>
          <% else %>
            <span id="working" style="display:none">Working...</span>
            <h4 class="center">this is a read only conversation</h4>
		      <% end#if current_user%>
        </div>
        

      </div>
		</div>
		
    <div id="sidebars" class="span-10 last">
      &nbsp;
      <div id="sidebars_container">
	      
	      <%# TODO: conversation controls (move to a partial) %>
	      <div id="convo_controls">
          <h4>
            <% if @conversation.read_only %><span class="highlight">readonly</span> <% end %><%= link_to h(@conversation.name), conversation_messages_path(@conversation), :class => 'tip', :title => @conversation.escaped_description %>
          </h4>
          <%if @conversation.parent_message_id%>
          	<%= link_to "back to parent", conversation_messages_path(@conversation.parent_message.conversation)%> &#187;
          <%end%>
          <%= render :partial => 'conversations/follow' %>
          <% if current_user == @conversation.owner %>
            &#187;
            <% if @conversation.read_only %>
              <%= link_to t("ui.make_writable"), readwrite_status_conversation_path(@conversation, :mode => 'rw'), :method => 'put' %>
            <% else %>
              <%= link_to t("ui.make_read_only"), readwrite_status_conversation_path(@conversation), :method => 'put' %>
            <% end %>
          <% end %>
          <%if logged_in? %>
          	&#187;
          	<%= link_to_remote t("ui.report"), :url => report_conversation_path(@conversation), :confirm => t("ui.reportconfirm_conversation") %>
          <%end%>
        </div>
        <%# end of conversation controls (move to a partial) %>
	      
        
		    <div id="col2" class="span-6">
		      &nbsp;
		      <div id="col2_container">
		        <%= render :partial => 'users/recently_visited' %>
		        <%= render :partial => 'users/news' %>
		      </div>
		    </div>
		    
		    <div id="col3" class="span-4 last">
		      &nbsp;
		      <div id="col3_container">
		        <%= render :partial => 'shared/user_stat' %>
		        <%= render :partial => 'shared/search_links' %>
        	  <%= render :partial => 'conversations/users_in_conversation' %>
        	</div>
        </div>
        
      </div>
      
   </div>
	</div>

	<div id="footer_container">&nbsp;<%= render(:partial => "shared/footer") %></div>

	<%#for now lets poll for new messages in conversations that are off the screen%>  
	<%= periodically_call_remote :url => {:controller => 'users', :action => 'update_news'}, 
		:frequency => 60, :complete => 'ShowUnreadMessagesInFLuidapp();' %> 
	

</body>
</html>
